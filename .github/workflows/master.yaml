on:
  push:
    branches: [dev-aws]
  pull_request:
    branches: [dev-aws]

name: Docker Build And Push
jobs:
  deploy:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set release version tag
      id: release-version
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Set up Ruby
      uses: actions/jekyll-build-pages@v1
      with:
        bundler-cache: true
    # - name: "Build Site"
    #   run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Tag and push image
      id: tag-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: qualis-site
        IMAGE_TAG: prod-${{ github.sha }}-${{ github.run_number }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"
#     - name: "Deploy to AWS S3"
#       run: aws s3 sync ./_site/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete --cache-control max-age=604800
#     - name: "Create AWS Cloudfront Invalidation"
#       run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"